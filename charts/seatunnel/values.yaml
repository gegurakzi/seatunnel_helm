replicaCount: 3

image:
  repository: seatunnel-dependency
  pullPolicy: IfNotPresent
  tag: "latest" #"2.3.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer

resources:
  limits:
    cpu: "1"
    memory: 4G
  requests:
    cpu: "1"
    memory: 2G

# Additional volumes on the output Deployment definition.
volumes:
  - name: hazelcast
    configMap:
      name: hazelcast
  - name: hazelcast-client
    configMap:
      name: hazelcast-client
  - name: seatunnelmap
    configMap:
      name: seatunnelmap
  - name: seatunnel-config
    configMap:
      name: seatunnel-config
      items:
        - key: seatunnel.streaming.conf
          path: seatunnel.streaming.conf

volumeMounts:
  - mountPath: /opt/seatunnel/config/hazelcast.yaml
    name: hazelcast
    subPath: hazelcast.yaml
  - mountPath: /opt/seatunnel/config/hazelcast-client.yaml
    name: hazelcast-client
    subPath: hazelcast-client.yaml
  - mountPath: /opt/seatunnel/config/seatunnel.yaml
    name: seatunnelmap
    subPath: seatunnel.yaml
  - mountPath: /data/seatunnel.streaming.conf
    name: seatunnel-config
    subPath: seatunnel.streaming.conf

reloader:
  enabled: false
  image:
    repository: "ghcr.io/stakater/reloader"
    pullPolicy: IfNotPresent
    tag: "v1.0.82"
  labels:
    app: reloader-reloader
    chart: "reloader-1.0.82"
    release: "reloader"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  serviceAccount:
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

configmaps:
  hazelcastClient:
    hazelcast-client:
      cluster-name: seatunnel
      properties:
        hazelcast.logging.type: log4j2
      network:
        cluster-members: |-
          {{- range $index := until (int .Values.replicaCount) }}
          - {{ $.Chart.Name }}-{{ $index }}.{{ include "seatunnel.fullname" $ }}.default.svc.cluster.local
          {{- end }}
  hazelcast:
    hazelcast:
      cluster-name: seatunnel
      network:
        rest-api:
          enabled: true
          endpoint-groups:
            CLUSTER_WRITE:
              enabled: true
            DATA:
              enabled: true
        join:
          tcp-ip:
            enabled: true
            member-list: |-
              {{- range $index := until (int .Values.replicaCount) }}
              - {{ $.Chart.Name }}-{{ $index }}.{{ include "seatunnel.fullname" $ }}.default.svc.cluster.local
              {{- end }}
        port:
          auto-increment: false
          port: 5801
      properties:
        hazelcast.invocation.max.retry.count: 20
        hazelcast.tcp.join.port.try.count: 30
        hazelcast.logging.type: log4j2
        hazelcast.operation.generic.thread.count: 50
  seatunnelmap:
    seatunnelmap:
      engine:
        history-job-expire-minutes: 1440
        backup-count: 1
        queue-type: blockingqueue
        print-execution-info-interval: 60
        print-job-metrics-info-interval: 60
        slot-service:
          dynamic-slot: true
        checkpoint:
          interval: 10000
          timeout: 60000
          storage:
            type: hdfs
            max-retained: 3
            plugin-config:
              namespace: /tmp/seatunnel/checkpoint_snapshot
              storage.type: hdfs
              fs.defaultFS: file:///tmp/ # Ensure that the directory has written permission
  seatunnelConfig:
    fileName: seatunnel.streaming.conf
